diff --git a/_esm/account-abstraction/accounts/implementations/toCoinbaseSmartAccount.js b/_esm/account-abstraction/accounts/implementations/toCoinbaseSmartAccount.js
index 500152b0f18158da7e08cc60c63a59f0782f9ceb..19c65b5cc45e4fa9a61e1feee54538a41a4d1dcb 100644
--- a/_esm/account-abstraction/accounts/implementations/toCoinbaseSmartAccount.js
+++ b/_esm/account-abstraction/accounts/implementations/toCoinbaseSmartAccount.js
@@ -31,7 +31,7 @@ import { toSmartAccount } from '../toSmartAccount.js';
  * })
  */
 export async function toCoinbaseSmartAccount(parameters) {
-    const { address, client, owners, nonce = 0n } = parameters;
+    const { client, owners, nonce = 0n, signatureOwnerIndex = 0, address } = parameters
     const entryPoint = {
         abi: entryPoint06Abi,
         address: entryPoint06Address,
@@ -88,6 +88,7 @@ export async function toCoinbaseSmartAccount(parameters) {
                 return '0x0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000012000000000000000000000000000000000000000000000000000000000000000170000000000000000000000000000000000000000000000000000000000000001949fc7c88032b9fcb5f6efc7a7b8c63668eae9871b765e23123bb473ff57aa831a7c0d9276168ebcc29f2875a0239cffdf2a9cd1c2007c5c77c071db9264df1d000000000000000000000000000000000000000000000000000000000000002549960de5880e8c687434170f6476605b8fe4aeb9a28632c7995cf3ba831d97630500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000008a7b2274797065223a22776562617574686e2e676574222c226368616c6c656e6765223a2273496a396e6164474850596759334b7156384f7a4a666c726275504b474f716d59576f4d57516869467773222c226f726967696e223a2268747470733a2f2f7369676e2e636f696e626173652e636f6d222c2263726f73734f726967696e223a66616c73657d00000000000000000000000000000000000000000000';
             return wrapSignature({
                 signature: '0xfffffffffffffffffffffffffffffff0000000000000000000000000000000007aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1c',
+                ownerIndex: signatureOwnerIndex
             });
         },
         async sign(parameters) {
@@ -100,6 +101,7 @@ export async function toCoinbaseSmartAccount(parameters) {
             const signature = await sign({ hash, owner });
             return wrapSignature({
                 signature,
+                ownerIndex: signatureOwnerIndex
             });
         },
         async signMessage(parameters) {
@@ -113,6 +115,7 @@ export async function toCoinbaseSmartAccount(parameters) {
             const signature = await sign({ hash, owner });
             return wrapSignature({
                 signature,
+                ownerIndex: signatureOwnerIndex
             });
         },
         async signTypedData(parameters) {
@@ -131,6 +134,7 @@ export async function toCoinbaseSmartAccount(parameters) {
             const signature = await sign({ hash, owner });
             return wrapSignature({
                 signature,
+                ownerIndex: signatureOwnerIndex
             });
         },
         async signUserOperation(parameters) {
@@ -148,6 +152,7 @@ export async function toCoinbaseSmartAccount(parameters) {
             const signature = await sign({ hash, owner });
             return wrapSignature({
                 signature,
+                ownerIndex: signatureOwnerIndex
             });
         },
         userOperation: {
diff --git a/_esm/account-abstraction/actions/bundler/prepareUserOperation.js b/_esm/account-abstraction/actions/bundler/prepareUserOperation.js
index 307d51f41d2c7b438ded03a636457b3c566112f3..9c30e3fa0b3fe5eb425ebddfa1fcc7a02ba828fe 100644
--- a/_esm/account-abstraction/actions/bundler/prepareUserOperation.js
+++ b/_esm/account-abstraction/actions/bundler/prepareUserOperation.js
@@ -156,7 +156,7 @@ export async function prepareUserOperation(client, parameters_) {
                 return request;
             // Otherwise, we will need to estimate the fees to fill the fee properties.
             try {
-                const client_ = 'client' in client ? client.client : client;
+                const client_ = 'client' in client && typeof client.client !== 'undefined' ? client.client : client;
                 const fees = await getAction(client_, estimateFeesPerGas, 'estimateFeesPerGas')({
                     chain: client_.chain,
                     type: 'eip1559',
diff --git a/_esm/clients/transports/http.js b/_esm/clients/transports/http.js
index 03ae0983434fa2d70d302ec269c9c8dfb010a9b0..4a9f0fc5ecc623333e194dc6741c825e97214f10 100644
--- a/_esm/clients/transports/http.js
+++ b/_esm/clients/transports/http.js
@@ -27,7 +27,7 @@ url, config = {}) {
             key,
             name,
             async request({ method, params }) {
-                const body = { method, params };
+                const body = { method, params, id: 1, jsonrpc: '2.0' };
                 const { schedule } = createBatchScheduler({
                     id: url_,
                     wait,
diff --git a/account-abstraction/accounts/implementations/toCoinbaseSmartAccount.ts b/account-abstraction/accounts/implementations/toCoinbaseSmartAccount.ts
index 7995fb62b6cf9eb732c9dc9905db2a702f2bcdb3..37c000c4a75d52e6eff360cffdb695728316fd2d 100644
--- a/account-abstraction/accounts/implementations/toCoinbaseSmartAccount.ts
+++ b/account-abstraction/accounts/implementations/toCoinbaseSmartAccount.ts
@@ -35,6 +35,7 @@ export type ToCoinbaseSmartAccountParameters = {
   address?: Address | undefined
   client: Client
   owners: readonly OneOf<LocalAccount | WebAuthnAccount>[]
+  signatureOwnerIndex?: number | undefined
   nonce?: bigint | undefined
 }
 
